# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      
      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Runs a single command using the runners shell
      - name: Build Docker IMage
        run: docker build -t ghcr.io/u-lucky/12345-12/pr-330:latest ./PR-22/

      - name: Push Image
        run: docker push ghcr.io/u-lucky/12345-12/pr-330:latest

  buildPython:
  # The type of runner that the job will run on
    runs-on: ubuntu-latest

  # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
    
      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

    # Runs a single command using the runners shell
      - name: Build Docker Image
        run: docker build -t ghcr.io/u-lucky/12345-12/pr-330:latest ./PR-21/

      - name: Push Image
        run: docker push ghcr.io/u-lucky/12345-12/pr-330:latest

  buildTelegram:
    
    runs-on: ubuntu-latest

    steps:
    - name: send telegram message on push
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Сообщение (строка #1)
            Сообщение (строка #2)
Done! Congratulations on your new bot. You will find it at t.me/DefenceOfTheAncient2_bot. You can now add a description, about section and profile picture for your bot, see /help for a list of commands. By the way, when you've finished creating your cool bot, ping our Bot Support if you want a better username for it. Just make sure the bot is fully operational before you do this.

Use this token to access the HTTP API:
8098059555:AAHudxPUhFYIL2dtus6daIJdJCG1j7yq4-U
Keep your token secure and store it safely, it can be used by anyone to control your bot.

For a description of the Bot API, see this page: https://core.telegram.org/bots/api
    

